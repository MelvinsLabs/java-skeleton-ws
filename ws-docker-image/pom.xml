<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>me.melvins.labs</groupId>
        <artifactId>skeleton-java-ws-parent</artifactId>
        <version>0.0.0</version>
    </parent>

    <artifactId>skeleton-java-ws-docker-image</artifactId>
    <packaging>pom</packaging>

    <name>WS Docker Image</name>

    <properties>
        <!-- Project Specific Settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Docker Specific Settings -->
        <docker.build.dir>${project.basedir}/docker-build</docker.build.dir>
    </properties>

    <dependencies>
        <!-- START OF DEPENDENCIES -->

        <!-- APACHE LOG4J LOGGING FRAMEWORK -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${org.apache.logging.log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${org.apache.logging.log4j.version}</version>
        </dependency>
        <dependency> <!-- To Bridge JUL To Log4J2 -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${org.apache.logging.log4j.version}</version>
        </dependency>

        <!-- LMAX DISRUPTOR For Async Logging -->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${com.lmax.disruptor.version}</version>
        </dependency>

        <!-- END OF DEPENDENCIES -->
    </dependencies>

    <build>
        <plugins>
            <!-- START of Plugins -->

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <!-- Copy WS Dependencies For Docker Image Build -->
                    <execution>
                        <id>copy-webapp-artifact</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${docker.build.dir}</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${service.groupId}</groupId>
                                    <artifactId>${service.artifactId}</artifactId>
                                    <version>${service.version}</version>
                                    <type>war</type>
                                </artifactItem>
                            </artifactItems>
                            <localRepositoryDirectory>/root/.m2/repository</localRepositoryDirectory>
                        </configuration>
                    </execution>

                    <!-- Copy Tomcat Logging Dependencies For Docker Image Build -->
                    <execution>
                        <id>copy-tomcat-logging-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${docker.build.dir}/tomcat</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>

                    <!-- Prepare The Dockerfile Resources For Docker Image Build -->
                    <execution>
                        <id>copy-docker-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${docker.build.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources</directory>
                                    <includes>
                                        <include>Dockerfile</include>
                                        <include>starter.sh</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Prepare The Tomcat Logging Resources For Docker Image Build -->
                    <execution>
                        <id>copy-docker-resources-without-filter</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${docker.build.dir}/tomcat</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources</directory>
                                    <includes>
                                        <include>server.xml</include>
                                        <include>log4j2.xml</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="build-docker-image">
                                <echo message="Initiating Build Docker Image For WS ${service.groupId}:${service.artifactId}:${service.version}"/>
                                <exec dir="${docker.build.dir}"
                                      executable="/bin/sh"
                                      failonerror="true">
                                    <arg value="-c"/>
                                    <arg value="docker build --tag ${docker.registry.namespace}/${docker.image.repo}:${docker.image.version} ."/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>push-docker-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="push-docker-image">
                                <echo message="Initiating Push Docker Image For ${docker.image.repo}:${docker.image.version}"/>
                                <exec dir="${docker.build.dir}"
                                      executable="/bin/sh"
                                      failonerror="true">
                                    <arg value="-c"/>
                                    <arg value="docker push ${docker.registry.namespace}/${docker.image.repo}:${docker.image.version}"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- END of Plugins -->
        </plugins>
    </build>

</project>
